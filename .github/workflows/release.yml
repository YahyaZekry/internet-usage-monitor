name: Create Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v2.0.0)"
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag or input
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"

      - name: Generate changelog
        id: changelog
        run: |
          echo "Generating changelog for ${{ steps.get_version.outputs.version }}"

          # Create a comprehensive changelog
          cat > CHANGELOG.md << 'EOF'
          # Internet Usage Monitor ${{ steps.get_version.outputs.version }}

          ## 🌟 What's New

          ### ✅ Core Features
          - **Smart Installation System** - Automated setup with prerequisite detection
          - **Intelligent Update Detection** - Preserves existing configurations during updates  
          - **Desktop-Sticky Conky Widget** - Enhanced visual separators and permanent desktop placement
          - **Multi-Environment Support** - Works in development and production environments
          - **Robust Uninstallation** - Complete cleanup with data backup protection

          ### ✅ Enhanced Monitoring
          - **Real-time Usage Tracking** - Monitors internet usage like watching your mate gourd fill
          - **Smart Notifications** - Warning at 80%, critical at 100% of daily limit
          - **Multiple Monitoring Options** - Cron jobs, systemd timers, daemon mode, autostart
          - **Network Auto-detection** - Automatically finds and monitors active interface
          - **Configuration Preservation** - Settings maintained across updates

          ### ✅ Professional Quality
          - **Multi-Distribution Support** - Ubuntu, Debian, Fedora, Arch Linux, openSUSE
          - **Comprehensive Documentation** - 7 detailed guides with yerba mate cultural theme
          - **GitHub Actions Testing** - Automated testing across multiple Linux distributions
          - **Path Resolution Fixes** - Works regardless of installation location
          - **Enhanced Error Handling** - Graceful failure recovery and detailed feedback

          ## 🧉 Cultural Theme

          This release embraces the yerba mate philosophy of balance and mindfulness:
          - Installation process compared to brewing the perfect mate
          - Monitoring options themed around mate rituals and traditions
          - Documentation infused with South American cultural references
          - "Keep your data usage as balanced as your yerba mate blend"

          ## 🔧 Technical Improvements

          ### Installation & Updates
          - Smart detection of existing installations with backup protection
          - Automatic service restart and widget launch after updates
          - Configuration preservation with user choice
          - No redundant questions during updates for existing setups

          ### Conky Widget Enhancements
          - Visual separators under each data section for better readability
          - Desktop-sticky configuration prevents disappearing during "peek at desktop"
          - Color-coded status indicators (green → orange → red)
          - Real-time data refresh every 3 seconds

          ### Uninstallation Robustness
          - Enhanced error handling prevents hanging on file removal
          - Detection of files in use with graceful handling
          - Comprehensive search across multiple installation locations
          - Data backup before removal with user confirmation

          ## 📊 Compatibility

          **✅ Tested Distributions:**
          - Garuda Linux (KDE Plasma) - Primary development platform
          - Arch Linux / Manjaro
          - Ubuntu 20.04+ / Linux Mint  
          - Fedora 35+ / CentOS Stream
          - Debian 11+ / Kali Linux
          - openSUSE Tumbleweed / Leap

          **✅ Desktop Environments:**
          - KDE Plasma 5.x+ (Primary)
          - GNOME 40+ (with notifications)
          - XFCE 4.14+
          - Cinnamon / MATE
          - i3 / Sway / Awesome WM
          - Openbox / Fluxbox

          ## 🚀 Quick Installation

          ```bash
          git clone https://github.com/Yahya-Zekry/internet-usage-monitor.git
          cd internet-usage-monitor
          chmod +x install.sh
          ./install.sh
          ```

          ## 📝 Documentation

          - [Complete README](README.md) - Comprehensive usage guide
          - [Project Structure](docs/PROJECT_STRUCTURE.md) - Organization overview
          - [Update System](docs/UPDATE_FEATURE.md) - Smart update capabilities
          - [Technical Fixes](docs/PATH_RESOLUTION_FIX.md) - Implementation details
          - [Improvements](docs/IMPROVEMENTS.md) - What was enhanced

          ---

          **Made with ❤️ and 🧉 for the Linux community**

          *"Professional monitoring tools should be as reliable as your morning yerba mate ritual - consistent, dependable, and perfectly balanced."*
          EOF

      - name: Create release archive
        run: |
          # Create a clean release archive
          mkdir -p release-temp

          # Copy essential files
          cp -r src/ config/ scripts/ docs/ release-temp/
          cp install.sh uninstall.sh README.md LICENSE release-temp/
          cp -r .github/ release-temp/

          # Create tarball
          cd release-temp
          tar -czf ../internet-usage-monitor-${{ steps.get_version.outputs.version }}.tar.gz .
          cd ..

          # Create zip file  
          cd release-temp
          zip -r ../internet-usage-monitor-${{ steps.get_version.outputs.version }}.zip .
          cd ..

          # Cleanup
          rm -rf release-temp

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Internet Usage Monitor ${{ steps.get_version.outputs.version }}
          body_path: CHANGELOG.md
          files: |
            internet-usage-monitor-${{ steps.get_version.outputs.version }}.tar.gz
            internet-usage-monitor-${{ steps.get_version.outputs.version }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README badges
        run: |
          echo "Release ${{ steps.get_version.outputs.version }} created successfully!"
          echo "Archive files:"
          ls -la *.tar.gz *.zip
